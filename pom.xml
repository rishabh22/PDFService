<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>nic.oad</groupId>
    <artifactId>pdfservice</artifactId>
    <version>1.1.1</version>
    <packaging>war</packaging>

    <name>pdfservice</name>
    <description>PDF Report Generator</description>
    <repositories>
        <repository>
            <id>itext</id>
            <url>https://repo.itextsupport.com/releases/</url>
        </repository>
    </repositories>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>13</java.version>
        <spring-cloud.version>Greenwich.SR2</spring-cloud.version>
        <maven.test.skip>true</maven.test.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.itextpdf/root -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>root</artifactId>
            <version>7.1.7</version>
            <type>pom</type>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.itextpdf/html2pdf -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>html2pdf</artifactId>
            <version>2.1.4</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.itextpdf/typography -->
        <!--<dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>typography</artifactId>
            <version>2.0.2</version>
        </dependency>-->


        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.vladmihalcea</groupId>
            <artifactId>hibernate-types-52</artifactId>
            <version>2.4.2</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>


        <!-- https://mvnrepository.com/artifact/com.itextpdf/font-asian -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>font-asian</artifactId>
            <version>7.1.7</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.jhonnymertz</groupId>
            <artifactId>java-wkhtmltopdf-wrapper</artifactId>
            <version>1.1.10-RELEASE</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.itextpdf/itext7-core -->
        <!--<dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itext7-core</artifactId>
            <version>7.1.5</version>
            <type>pom</type>
        </dependency>-->


        <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
        <!--<dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>4.0.1</version>
        </dependency>-->


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>pdf-service</finalName>

        <extensions>
            <!-- Enabling the use of SSH -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>3.2.0</version>
            </extension>
        </extensions>

        <!-- <resources>
             <resource>
                 <directory>/Program Files/wkhtmltopdf/bin</directory>
             </resource>
         </resources>-->
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <activatedProperties>dev</activatedProperties>
            </properties>

        </profile>

        <profile>
            <id>staging</id>
            <properties>
                <activatedProperties>staging</activatedProperties>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>wagon-maven-plugin</artifactId>
                        <version>2.0.0</version>
                        <configuration>
                            <fromFile>${project.build.directory}/${project.build.finalName}.war</fromFile>
                            <serverId>id_personnel1</serverId>
                            <url>${server.personnel1.tomcat.jdk11path}</url>
                        </configuration>
                        <executions>
                            <execution>
                                <id>upload-war-to-server</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>upload-single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <activatedProperties>prod</activatedProperties>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>wagon-maven-plugin</artifactId>
                        <version>2.0.0</version>
                        <configuration>
                            <fromFile>${project.build.directory}/${project.build.finalName}.war</fromFile>
                            <serverId>id_personnel</serverId>
                            <url>${server.personnel.tomcat.bootpath}</url>
                        </configuration>
                        <executions>
                            <execution>
                                <id>upload-war-to-server</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>upload-single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>


                </plugins>
            </build>
        </profile>

        <profile>
            <id>prod_100</id>
            <properties>
                <activatedProperties>prod</activatedProperties>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>wagon-maven-plugin</artifactId>
                        <version>2.0.0</version>
                        <configuration>
                            <serverId>id_personnel</serverId>
                            <url>${server.personnel.apppath}/${project.build.finalName}</url>
                        </configuration>
                        <executions>
                            <execution>
                                <id>stop-service</id>
                                <phase>install</phase>
                                <configuration>
                                    <commands>
                                        <command>service ${project.build.finalName} stop</command>
                                        <command>service ${project.build.finalName} status</command>
                                    </commands>
                                    <displayCommandOutputs>true</displayCommandOutputs>
                                    <failOnError>false</failOnError>
                                </configuration>
                                <goals>
                                    <goal>sshexec</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>upload-war-to-server</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>upload-single</goal>
                                </goals>
                                <configuration>
                                    <fromFile>${project.build.directory}/${project.build.finalName}.war</fromFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>restart-service</id>
                                <phase>install</phase>
                                <configuration>
                                    <commands>
                                        <command>service ${project.build.finalName} start</command>
                                        <command>service ${project.build.finalName} status</command>
                                    </commands>
                                    <displayCommandOutputs>true</displayCommandOutputs>
                                </configuration>
                                <goals>
                                    <goal>sshexec</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>prod_103</id>
            <properties>
                <activatedProperties>prod</activatedProperties>
            </properties>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>wagon-maven-plugin</artifactId>
                        <version>2.0.0</version>
                        <configuration>
                            <serverId>id_digital</serverId>
                            <url>${server.digital.apppath}/${project.build.finalName}</url>
                        </configuration>
                        <executions>
                            <execution>
                                <id>stop-service</id>
                                <phase>install</phase>
                                <configuration>
                                    <commands>
                                        <command>service ${project.build.finalName} stop</command>
                                        <command>service ${project.build.finalName} status</command>
                                    </commands>
                                    <displayCommandOutputs>true</displayCommandOutputs>
                                    <failOnError>false</failOnError>
                                </configuration>
                                <goals>
                                    <goal>sshexec</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>upload-war-to-server</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>upload-single</goal>
                                </goals>
                                <configuration>
                                    <fromFile>${project.build.directory}/${project.build.finalName}.war</fromFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>restart-service</id>
                                <phase>install</phase>
                                <configuration>
                                    <commands>
                                        <command>service ${project.build.finalName} start</command>
                                        <command>service ${project.build.finalName} status</command>
                                    </commands>
                                    <displayCommandOutputs>true</displayCommandOutputs>
                                </configuration>
                                <goals>
                                    <goal>sshexec</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>


    </profiles>


</project>
